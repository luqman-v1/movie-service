// Code generated by mockery 2.9.3. DO NOT EDIT.

package mocks

import (
	context "context"
	__ "movie-service/transport/grpc/proto/movie"

	mock "github.com/stretchr/testify/mock"
)

// IOmDb is an autogenerated mock type for the IOmDb type
type IOmDb struct {
	mock.Mock
}

// Detail provides a mock function with given fields: ctx, request
func (_m *IOmDb) Detail(ctx context.Context, request *__.DetailRequest) (*__.DetailMovie, error) {
	ret := _m.Called(ctx, request)

	var r0 *__.DetailMovie
	if rf, ok := ret.Get(0).(func(context.Context, *__.DetailRequest) *__.DetailMovie); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*__.DetailMovie)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *__.DetailRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields: ctx, request
func (_m *IOmDb) List(ctx context.Context, request *__.ListRequest) (*__.ListResponse, error) {
	ret := _m.Called(ctx, request)

	var r0 *__.ListResponse
	if rf, ok := ret.Get(0).(func(context.Context, *__.ListRequest) *__.ListResponse); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*__.ListResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *__.ListRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
